covid
df <- covid %>%
select(Date, New.cases, New.deaths) %>%
gather(value = "value", value = "value", -date)
library(tidyr)
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
df <- covid %>%
select(Date, New.cases, New.deaths) %>%
gather(value = "value", value = "value", -date)
df <- covid(select(Date, New.cases, New.deaths)
gather(value = "value", value = "value", -date))
p <- ggplot(data = covid, aes(x = date, y = New.cases)) +
geom_line(color = "#00AFBB", size = 1)
p
# Set axis limits c(min, max)
min <- as.Date("2020-7-1")
max <- NA
p + scale_x_date(limits = c(min, max))
p
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
ggplot(new_case_covid, aes(x = day, y = )) + geom_line( color="steelblue")
p <- ggplot(data = covid, aes(x = date, y = New.cases)) +
geom_line(color = "#00AFBB", size = 1)
p
# Set axis limits c(min, max)
min <- as.Date("2020-7-1")
max <- NA
p + scale_x_date(limits = c(min, max))
p
p <- ggplot(data = covid, aes(x = date, y = New.cases)) +
geom_line(color = "#00AFBB", size = 1)
p
# Set axis limits c(min, max)
min <- as.Date("2020-7-1")
max <- NA
p + scale_x_date(limits = c(min, max))
p
p <- ggplot(data = new_case_covid, aes(x = date, y = new_case)) +
geom_line(color = "#00AFBB", size = 1)
p
new_case_covid = data.frame(day, new_case)
ggplot(new_case_covid, aes(x = day, y = new_case)) + geom_line( color="steelblue")
# Set axis limits c(min, max)
min <- as.Date("2020-07-01")
max <- NA
p = ggplot(new_case_covid, aes(x = day, y = new_case)) + geom_line( color="steelblue")
# Set axis limits c(min, max)
min = as.Date("2020-07-01")
max = NA
p + scale_x_date(limits = c(min, max))
p
p + scale_x_date(limits = c(min, max))
covid = read.csv("day_wise.csv", header = TRUE)
covid
n = dim(covid)[1]
#date = covid[1:50,1]
new_case = rev(covid[,6])
new_death = rev(covid[,7])
day = as.Date("2020-07-27") - 0:187
# Set axis limits c(min, max)
min = as.Date("2020-07-01")
max = NA
new_case_covid = data.frame(day, new_case)
new_death_covid = data.frame(day, new_death)
p = ggplot(new_case_covid, aes(x = day, y = new_case)) + geom_line( color="steelblue") + scale_x_date(limits = c(min, max))
p
par(new=TRUE)
p1 = ggplot(new_death_covid, aes(x = day, y = new_death)) + geom_line( color="yellow") + scale_x_date(limits = c(min, max))
p1
p = ggplot(new_case_covid, aes(x = day)) + geom_line(aes(y=new_case), color="steelblue") + geom_line(aes(y=new_death), color="yellow")  + scale_x_date(limits = c(min, max))
p
covid = read.csv("day_wise.csv", header = TRUE)
covid
n = dim(covid)[1]
#date = covid[1:50,1]
new_case = rev(covid[,6])
recover = rev(covid[,8])
day = as.Date("2020-07-27") - 0:187
# Set axis limits c(min, max)
min = as.Date("2020-07-01")
max = NA
new_case_covid = data.frame(day, new_case, recover)
new_death_covid = data.frame(day, new_death)
p = ggplot(new_case_covid, aes(x = day)) + geom_line(aes(y=new_case), color="steelblue") + geom_line(aes(y=recover), color="yellow")  + scale_x_date(limits = c(min, max))
p
p = ggplot(new_case_covid, aes(x = day)) + geom_line(aes(y=new_case), color="steelblue") + geom_line(aes(y=recover), color="red")  + scale_x_date(limits = c(min, max))
p
attach(covid)
#date = covid[1:50,1]
new.case
#date = covid[1:50,1]
New.case
p = ggplot(new_case_covid, aes(x = day)) + geom_line(aes(y=new_case), color="steelblue") + geom_line(aes(y=recover), color="red") # + scale_x_date(limits = c(min, max))
p
#-----Histogram-----
country_wise_latest = read.csv("country_wise_latest.csv", header = TRUE)
WHO_region = country_wise_latest[,15]
WHO_region
table(WHO_region)
pie(table(WHO_region))
pie(table(WHO_region))
?pie
pie(table(WHO_region), col = c("purple", "violetred1", "green3", "cornsilk", "cyan", "white"))
pie(table(WHO_region), col = c("purple", "violetred1", "green3", "cornsilk", "cyan", "white"), main = "WHO region")
barplot(table(WHO_region))
names(table(WHO_region)) = c("Africa", "Americas", "East_Med", "Europe", "SE Asia", "West Pac")
table(WHO_region)= c("Africa", "Americas", "East_Med", "Europe", "SE Asia", "West Pac")
B = table(WHO_region)
names(B) = c("Africa", "Americas", "East_Med", "Europe", "SE Asia", "West Pac")
barplot(B)
names(B) = c("Africa", "Americas", "EastMed", "Europe", "SE Asia", "West Pac")
barplot(B)
?barplot
barplot(B,ylim = 50 )
barplot(B,ylim = 50)
?barplot
barplot(B, ylim = c(0,50))
barplot(B, ylim = c(0,60))
day_wise = read.csv("day_wise.csv", header = TRUE)
n = dim(day_wise)[1]
#date = covid[1:50,1]
new.case = rev(day_wise[,6])
recover = rev(day_wise[,8])
day = as.Date("2020-07-27") - 0:187
# Set axis limits c(min, max)
min = as.Date("2020-07-01")
max = NA
new_case_covid = data.frame(day, new_case, recover)
new_death_covid = data.frame(day, new_death)
p = ggplot(new_case_covid, aes(x = day)) + geom_line(aes(y=new_case), color="steelblue") + geom_line(aes(y=recover), color="red") # + scale_x_date(limits = c(min, max))
p
?ggplot
?barplot
barplot(B, ylim = c(0,60), xlab = "value", ylab = "Region")
barplot(B, ylim = c(0,60), ylab = "value", xlab = "Region")
barplot(B, ylim = c(0,60), ylab = "value", xlab = "Region", main = "WHO region")
#------Histogram----
confirmed = country_wise_latest$Confirmed
hist(confirmed)
#------Histogram----
confirmed = country_wise_latest$New.cases
hist(confirmed)
#------Histogram----
confirmed = country_wise_latest$Active
hist(confirmed)
#------Histogram----
confirmed = day_wise$New.cases
hist(confirmed)
#------Histogram----
confirmed = country_wise_latest$New.cases
hist(confirmed)
#------Histogram----
worldometer_data = read.csv("worldometer_data.csv", header = TRUE)
hist(worldometer_data$Population)
summary(worldometer_data$Population)
population = cut(worldometer_data$Population,10)
hist(population)
population
table(population)
hist(table(population))
population = cut(worldometer_data$TotalDeaths,10)
table(population)
hist(table(population))
population = cut(worldometer_data$TotalDeaths,10)
table(population)
hist(table(population))
hist(table(population))
population = worldometer_data$TotalDeaths
table(population)
hist(table(population))
summary(worldometer_data$TotalDeaths)
population = cut(worldometer_data$TotalDeaths,10)
table(population)
hist(table(population))
#------Histogram----
worldometer_data = read.csv("worldometer_data.csv", header = TRUE)
population = cut(worldometer_data$TotalDeaths,10)
table(population)
hist(table(population))
total_deaths = cut(worldometer_data$TotalCases,10)
table(total_deaths)
hist(table(total_deaths))
hist(worldometer_data$TotalCases)
hist(worldometer_data$TotalDeaths)
hist(worldometer_data$Deaths.1M.pop)
?hist
hist(worldometer_data$Deaths.1M.pop, nclass = 10)
hist(worldometer_data$Deaths.1M.pop, nclass = 10)
hist(worldometer_data$Deaths.1M.pop, nclass = 100)
hist(worldometer_data$Deaths.1M.pop, nclass = 50)
hist(worldometer_data$Population, nclass = 50)
hist(day_wise$New.cases, nclass = 50)
hist(day_wise$New.deaths, nclass = 50)
hist(day_wise$Deaths...100.Recovered)
hist(day_wise$Deaths...100.Cases)
hist(day_wise$Deaths...100.Cases,nclass = 10)
hist(day_wise$Deaths...100.Cases,nclass = 10)
hist(day_wise$Deaths...100.Cases,nclass = 10, ylim = c(0,30))
vita = read.csv("vita.csv", header = TRUE)
vita
stem_viat_girl = stem(vita[,1])
stem_vita_boy = stem(vita[,2])
Girls = vita[,1]
Boys = vita[,2]
stem.leaf.backback(Girls, Boys, m = 1)
stem.leaf.backback(Girls, Boys, style = "bare")
library("aplpack")
vita = read.csv("vita.csv", header = TRUE)
vita
stem_viat_girl = stem(vita[,1])
stem_vita_boy = stem(vita[,2])
Girls = vita[,1]
Boys = vita[,2]
stem.leaf.backback(Girls, Boys, m = 1)
stem.leaf.backback(Girls, Boys, style = "bare")
p = ggplot(new_case_covid, aes(x = day)) + geom_line(aes(y=new_case), color="steelblue") + geom_line(aes(y=recover), color="red") # + scale_x_date(limits = c(min, max))
p
max = as.Date("2020-07-11")
new_case_covid = data.frame(day, new_case, recover)
new_death_covid = data.frame(day, new_death)
p = ggplot(new_case_covid, aes(x = day)) + geom_line(aes(y=new_case), color="steelblue") + geom_line(aes(y=recover), color="red") # + scale_x_date(limits = c(min, max))
p
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
# Set axis limits c(min, max)
min = as.Date("2020-07-01")
max = as.Date("2020-07-11")
new_case_covid = data.frame(day, new_case, recover)
new_death_covid = data.frame(day, new_death)
p = ggplot(new_case_covid, aes(x = day)) + geom_line(aes(y=new_case), color="steelblue") + geom_line(aes(y=recover), color="red") + scale_x_date(limits = c(min, max))
p
#---Frequency----
Death = day_wise$Deaths[(n-10):n,:]
#---Frequency----
Death = day_wise$Deaths[(n-10):n,]
Death
n = dim(day_wise)[1]
#---Frequency----
Death = day_wise$Deaths[(n-10):n,]
n
#---Frequency----
Death = day_wise$Deaths[177:187,]
Death[(n-1):n,]
#---Frequency----
Death = day_wise$Deaths
Death[(n-1):n,]
Death[(n-1):n]
Death[(n-10):n]
#---Frequency----
confirmed1 = day_wise$Confirmed
confirmed1[(n-10):n]
newcase1 = day_wise$New.cases
newcase1[(n-10):n]
covid19 = data.frame(confirmed1, newcase1)
covid19
covid19 = data.frame(confirmed1[(n-10):n], newcase1[(n-10):n])
covid19
confirmed1 = day_wise$Confirmed
confirmed = confirmed1[(n-10):n]
newcase1 = day_wise$New.cases
newcase = newcase1[(n-10):n]
covid19 = data.frame(confirmed, newcase)
covid19
barplot(covid19$confirmed)
day1 = as.Date("2020-07-27") - 0:9
day1
rev(day1)
names(covid19$confirmed) = rev(day1)
barplot(covid19$confirmed)
confirmed1 = day_wise$Confirmed
confirmed = confirmed1[(n-10):n]
newcase1 = day_wise$New.cases
newcase = newcase1[(n-10):n]
covid19 = data.frame(confirmed, newcase)
covid19
day1 = as.Date("2020-07-27") - 0:9
rev(day1)
barplot(covid19$confirmed)
names(covid19$confirmed) = rev(day1)
confirmed2 = covid19$confirmed
barplot(confirmed2)
names(confirmed2) = rev(day1)
confirmed2 = covid19$confirmed
barplot(confirmed2)
names(confirmed2) = rev(day1)
confirmed2 = covid19$confirmed
barplot(confirmed2)
names(confirmed2) = rev(day1)
barplot(confirmed2)
names(confirmed2) = c(rev(day1))
confirmed1 = day_wise$Confirmed
cumulative = confirmed1[(n-10):n]
newcase1 = day_wise$New.cases
frequency1 = newcase1[(n-10):n]
covid19 = data.frame(frequency1, cumulative)
covid19
day1 = as.Date("2020-07-27") - 0:9
rev(day1)
barplot(frequency1)
names(frequency1) = c(rev(day1))
barplot(frequency1, ylim = c(0,300000))
counts <- table(frequency1, cumulative)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
counts <- table(covid19$frequency1, covid19$cumulative)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
barplot(covid19, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
barplot(covid19, beside=TRUE)
?barplot
barplot(c(covid19$frequency1, covid19$cumulative), beside=TRUE)
barplot(c(covid19$frequency1, covid19$cumulative), beside=FALSE)
barplot(c(covid19$frequency1, covid19$cumulative),inside = TRUE)
barplot(c(covid19$frequency1, covid19$cumulative))
barplot(c(covid19$frequency1, covid19$cumulative), col = c("blue", "red"))
covid19 = t(data.frame(frequency1, cumulative))
covid19
covid19 = [frequency1, cumulative]
covid19
covid19[,1] = frequency1
covid19[,2] = cumulative
covid19
t(covid19)
day_wise
day_wise
n = dim(day_wise)[1]
n
barplot(frequency1, ylim = c(0,300000))
barplot(frequency1, ylim = c(0,300000))
confirmed1 = day_wise$Confirmed
cumulative = confirmed1[(n-10):n]
newcase1 = day_wise$New.cases
frequency1 = newcase1[(n-10):n]
covid19[,1] = frequency1
covid19[,2] = cumulative
covid19_1 = t(covid19)
day1 = as.Date("2020-07-27") - 0:9
rev(day1)
barplot(frequency1, ylim = c(0,300000))
names(frequency1) = c(rev(day1))
names(frequency1) = c(rev(day1))
names(frequency1) = c(rev(day1))
barplot(frequency1, ylim = c(0,300000))
new_case_covid = data.frame(day, new_case, recover)
new_death_covid = data.frame(day, new_death)
p = ggplot(new_case_covid, aes(x = day)) + geom_line(aes(y=new_case), color="steelblue") + geom_line(aes(y=recover), color="red") + scale_x_date(limits = c(min, max))
p
#-
#------Stem and Leaf-------
vita = read.csv("vita.csv", header = TRUE)
vita
stem_viat_girl = stem(vita[,1])
stem_vita_boy = stem(vita[,2])
Girls = vita[,1]
Boys = vita[,2]
stem.leaf.backback(Girls, Boys, m = 1)
day_wise
p = ggplot(new_case_covid, aes(x = day)) + geom_line(aes(y=new_case), color="steelblue") + geom_line(aes(y=recover), color="red")# + scale_x_date(limits = c(min, max))
p
library("aplpack")
library(ggplot2)
#---------Example 1.7 page 85------
#---- Inserting data from Excel (.csv)
onl_res = read.csv("Example_17.csv", header = TRUE)
#---- Piechart-----
#------------------------------------
pie_onl_res = onl_res[1:(dim(onl_res)[1]-1), 2]
names(pie_onl_res) = c('Google', 'Library', 'Wikipedia', 'Other') #--- Assigning name of variable-----
pie(pie_onl_res) #---- Using defaut color---
pie(pie_onl_res, col = c("blue", "violetred1", "green3", "cornsilk")) #---- Changing the colors-----
#---- Barchart-----
bar_onl_res = onl_res[1:(dim(onl_res)[1]-1), 2]/onl_res[dim(onl_res)[1], 2]*100
per_onl_res = matrix(0, dim(onl_res)[1], dim(onl_res)[2])
per_onl_res[,1] = onl_res[,1]
per_onl_res[1:(dim(onl_res)[1]-1), 2] = round(t(bar_onl_res),1)
per_onl_res[dim(onl_res)[1],2] = round(onl_res[dim(onl_res)[1],2]/onl_res[dim(onl_res)[1], 2]*100,1)
per_onl_res  #Preference percent through the matrix
names(bar_onl_res) = c('Google', 'Library', 'Wikipedia', 'Other')   #--- Assigning name of variable
barplot(bar_onl_res, ylab = 'Preference percent', ylim = c(0,80), main = 'Online Resource')
#------Stem and Leaf-------
vita = read.csv("vita.csv", header = TRUE)
vita
stem_viat_girl = stem(vita[,1])
stem_vita_boy = stem(vita[,2])
Girls = vita[,1]
Boys = vita[,2]
stem.leaf.backback(Girls, Boys, m = 1)
stem.leaf.backback(Girls, Boys, style = "bare")
stem.leaf(Girls)
stem.leaf(Girls, depth = FALSE)
stem.leaf(Girls, depth = FALSE, m=1)
?stem.leaf.backback
?barplot
barplot(frequency1, ylim = c(0,300000))
day1 = as.Date("2020-07-18") - 0:9
names(frequency1) = c(day1)
barplot(frequency1, ylim = c(0,300000))
barplot(frequency1, main = "The number of cases each day", xlab = "Time", ylab = "Number", ylim = c(0,300000))
str(day_wise)
setwd("Users/thanhquynh/stat/star.csv")
setwd("Users\thanhquynh\stat\star.csv")
setwd("~Users\thanhquynh\stat\star.csv")
setwd("Users\thanhquynh\stat")
setwd("Users/thanhquynh/stat")
setwd("Users/thanhquynh/stat")
setwd("Users/thanhquynh/stat")
data <- read.csv("star.csv", header = TRUE)
data
data$boy
data[100,]
attach(data)
boy
#Dinh luong/ Dinh tinh
BAngGT = table(boy)
#Dinh luong/ Dinh tinh
BangGT = table(boy)
BangGT
pie(banggt)
pie(BangGT)
Bangblack = table(black)
pie(Bangblack)
barplot(Bangblack)
barplot(Bangblack, ylim = c(0,4000))
data[100,]
barplot(table(tchwhite))
barplot(table(tchwhite), ylim = c(0,5000))
Bang1 = table(tchwhite, freelunch)
Bang1
bar(Bang1)
barplot(Bang1)
barplot(Bang1, ylim = c(0,3000))
barplot(Bang1, ylim = c(0,3100))
barplot(Bang1, ylim = c(0,3500))
barplot(Bang1, ylim = c(0,3000))
barplot(Bang1, ylim = c(0,3000), beside = TRUE)
barplot(table(black, freelunch), beside = TRUE)
table(black, freelunch)
barplot(table(tchwhite, tchmasters), beside = TRUE)
table(tchwhite, tchmasters)
barplot(table(tchwhite, tchmasters), ylim = c(0,3000), beside = TRUE)
table(tchwhite, tchmasters)
pie(table(mathscore))
#Histogram
hist(mathscore)
hist(readscore)
hist(readscore, ylim = c(0,2000))
plot(readscore, mathscore)
setwd("\Users\thanhquynh\stat\Data week 3\callcenter80.xls")
setwd("Users\thanhquynh\stat\Data week 3\callcenter80.xls")
setwd("~/")
setwd("~\Users\thanhquynh\stat\Data week 3\callcenter80.xls")
setwd("~/Users/thanhquynh/stat/Data week 3/callcenter80.xls")
setwd("~/stat/Data week 3")
data_1_48 = c(81, 73, 93, 85, 75, 98, 93, 55, 80, 90)
mean(data_1_48)
?mean
#Exercise 1.50 Calls to a customer service center.
data_1_50 = read.csv("callcenter80.csv", header = TRUE)
median(data_1_50)
data_1_50
?median
#Exercise 1.50 Calls to a customer service center.
data_1_50 = read.csv("callcenter80.csv", header = TRUE)
attach(data_1_50)
median(c(length))
sort(length)
sort(length)[40]
sort(length)[41]
hist(length)
hist(length, nclass = 5)
hist(length, nclass = 10)
median(length)
#Test median
(sort(length)[40] + sort(length)[41])/2
#Exercise 1.51 Find the median (same data of Exercise 1.48)
data_1_51 = sort(data_1_48)
median(data_1_51)
#Exercise 1.51 Find the median (same data of Exercise 1.48)
median(data_1_48)
data_1_51 = sort(data_1_48)
(data_1_51[5] + data_1_51[6])/2
#Exercise 1.52 Find the quartiles
quantiles(data_1_48)
?quartiles
??quantile
?quantile
#Exercise 1.52 Find the quartiles
quantile(data_1_48)
data_1_51
summary(data_1_48)
#Boxplot
boxplot(data_1_48)
data_1_48
data_1_51
#Example 1.33 Metabolic rate
data_1_33 = read.csv("metabolic.csv", header = TRUE)
data_1_33
attach(data_1_33)
var(MetabolicRate)
sd(MetabolicRate)
